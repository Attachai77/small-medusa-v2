name: Build and Release

on:
  push:
    branches:
      - 'dev'
      - 'sit'        
      - 'uat'
      - 'main' 

jobs:
  build-images:
    runs-on: ubuntu-latest
    outputs:
      utech-medusa-server-image: ${{ steps.create-output.outputs.utech-medusa-server-image }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
      - name: Get Commit Info
        id: commit-info
        run: |
          branch=${GITHUB_REF##*/}
          echo "BRANCH=${branch}" >> $GITHUB_OUTPUT
          echo "BRANCH_UPPERCASE=${branch^^}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Create Dynamic Key
        id: dynamic-keys
        run: |
          echo "AWS_KEY=${{ format('AWS_KEY_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          echo "AWS_SECRET=${{ format('AWS_SECRET_KEY_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          echo "AWS_ACCOUNT_ID=${{ format('AWS_ACCOUNT_ID_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          echo "VAULT_URL=${{ format('VAULT_URL_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          echo "VAULT_USER=${{ format('VAULT_USER_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          echo "VAULT_PASSWORD=${{ format('VAULT_PASSWORD_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT          
          if [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "DEV" ]; then
            echo "VAULT_FOLDER_PATH=utech-dev" >> $GITHUB_OUTPUT
          elif [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "SIT" ]; then
            echo "VAULT_FOLDER_PATH=utech-sit" >> $GITHUB_OUTPUT
          elif [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "UAT" ]; then
            echo "VAULT_FOLDER_PATH=utech-uat" >> $GITHUB_OUTPUT          
          else
            echo "VAULT_FOLDER_PATH=utech-prod" >> $GITHUB_OUTPUT
          fi          
      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets[steps.dynamic-keys.outputs.VAULT_URL] }}
          method: userpass
          username: ${{ secrets[steps.dynamic-keys.outputs.VAULT_USER] }}
          password: ${{ secrets[steps.dynamic-keys.outputs.VAULT_PASSWORD] }}
          secrets: |
            ${{ steps.dynamic-keys.outputs.VAULT_FOLDER_PATH }}/data/utech-medusa-server MEDUSA_BACKEND_URL | MEDUSA_BACKEND_URL ;
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets[steps.dynamic-keys.outputs.AWS_KEY] }}
          aws-secret-access-key: ${{ secrets[steps.dynamic-keys.outputs.AWS_SECRET] }}
          aws-region: ap-southeast-1 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push Image to ECR
        uses: docker://ghcr.io/kciter/aws-ecr-action:latest
        with:
          access_key_id: ${{ secrets[steps.dynamic-keys.outputs.AWS_KEY] }}
          secret_access_key: ${{ secrets[steps.dynamic-keys.outputs.AWS_SECRET] }}
          account_id: ${{ secrets[steps.dynamic-keys.outputs.AWS_ACCOUNT_ID] }}
          repo: utech-medusa-server
          region: ap-southeast-1
          tags: ${{ steps.commit-info.outputs.BRANCH }}-${{ steps.commit-info.outputs.SHORT_SHA }}
          create_repo: true
          set_repo_policy: false
          dockerfile: ./Dockerfile
          path: . 
          extra_build_args: --build-arg MEDUSA_BACKEND_URL=${{ steps.import-secrets.outputs.MEDUSA_BACKEND_URL }}
      - name: Image output
        id: create-output
        run: |
          echo "utech-medusa-server-image=utech-medusa-server:${{ steps.commit-info.outputs.BRANCH }}-${{ steps.commit-info.outputs.SHORT_SHA }}" >> $GITHUB_OUTPUT

  release:
    needs: build-images  
    runs-on: ubuntu-latest
    steps:
      - name: Get Commit Info
        id: commit-info
        run: |
          branch=${GITHUB_REF##*/}
          echo "BRANCH=${branch}" >> $GITHUB_OUTPUT
          echo "BRANCH_UPPERCASE=${branch^^}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Create Dynamic Key
        id: dynamic-keys
        run: |
          echo "AWS_ACCOUNT_ID=${{ format('AWS_ACCOUNT_ID_{0}', steps.commit-info.outputs.BRANCH_UPPERCASE) }}" >> $GITHUB_OUTPUT
          if [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "DEV" ]; then
            echo "UTECH_ENV=dev" >> $GITHUB_OUTPUT
          elif [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "SIT" ]; then
            echo "UTECH_ENV=sit" >> $GITHUB_OUTPUT            
          elif [ "${{ steps.commit-info.outputs.BRANCH_UPPERCASE }}" = "UAT" ]; then
            echo "UTECH_ENV=uat" >> $GITHUB_OUTPUT
          else
            echo "UTECH_ENV=production" >> $GITHUB_OUTPUT
          fi
      - name: Echo needs
        id: echo-needs
        env:
          JOB_CONTEXT: ${{ toJSON(needs.build-images.outputs) }}
        run: echo "$JOB_CONTEXT"  
      - name: Echo Image Utech Medusa Server
        id: echo-image-utech-medusa-server
        run: |
          image_value="${{ needs.build-images.outputs.utech-medusa-server-image }}"
          if [ -n "$image_value" ]; then
            echo "IMAGE_UTECH_MEDUSA_SERVER=true" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_UTECH_MEDUSA_SERVER=false" >> $GITHUB_OUTPUT
          fi
      - name: Checkout Repository GitOps
        uses: actions/checkout@v4
        with:
          repository: Zimpligital/utech-gitops
          ref: main
          token: ${{ secrets.ACCESS_TOKEN }}
          path: gitops
      - name: Update Kustomize Utech Medusa Server
        if: steps.echo-image-utech-medusa-server.outputs.IMAGE_UTECH_MEDUSA_SERVER == 'true'
        run: |-
          cd gitops/projects/utech-server/overlays/${{ steps.dynamic-keys.outputs.UTECH_ENV }}
          kustomize edit set image utech-server-image=${{ secrets[steps.dynamic-keys.outputs.AWS_ACCOUNT_ID] }}.dkr.ecr.ap-southeast-1.amazonaws.com/${{needs.build-images.outputs.utech-medusa-server-image}}
          cat kustomization.yaml
      - name: Commit files
        run: |-
          cd gitops
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump image version"
          git status
      - name: Push GitOps changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          repository: Zimpligital/utech-gitops
          branch: main
          directory: gitops
